basePath: /
definitions:
  model.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.PhotoResponse:
    properties:
      caption:
        type: string
      created_at:
        type: string
      id:
        type: string
      photo_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  model.RegisterUserRequest:
    properties:
      age:
        minimum: 8
        type: integer
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
  model.UpdatePhotoRequest:
    properties:
      caption:
        type: string
      email:
        type: string
      photo_url:
        type: string
      title:
        type: string
    required:
    - photo_url
    - title
    type: object
  model.WebResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample API Example
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: TEST API
  version: "2.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.WebResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Login user
      tags:
      - users
  /photo:
    get:
      consumes:
      - application/json
      description: List Photo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.PhotoResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List Photo
      tags:
      - photo
  /photo/{id}:
    delete:
      consumes:
      - application/json
      description: Remove book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.WebResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Remove book by ID
      tags:
      - photo
  /photo/id:
    get:
      consumes:
      - application/json
      description: List Photo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.PhotoResponse'
              type: object
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List Photo
      tags:
      - photo
    put:
      consumes:
      - application/json
      description: Edit Photo
      parameters:
      - description: Update photo
        in: body
        name: photo
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePhotoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.PhotoResponse'
              type: object
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Edit Photo
      tags:
      - photo
  /register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: Register user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.WebResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
